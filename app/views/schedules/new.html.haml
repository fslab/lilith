-# encoding: UTF-8
-#
-# Copyright Alexander E. Fischer <aef@raxys.net>, 2011
-#
-# This file is part of Lilith.
-#
-# Lilith is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# Lilith is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with Lilith.  If not, see <http://www.gnu.org/licenses/>.
- set_body_id :schedules
%h2= t('schedules.schedule_composition')

%form{:action => semester_schedules_path(@semester.token)}
  %h3= t('schedules.navigation')

  .controls
    %p
      %label{:for => 'schedule_id'}= t('schedules.actuality') + ': '
      %select{:id => 'schedule_id', :name => 'schedule_id'}
        %option{:value => 'latest', :selected => 'selected'}= t('schedules.latest')
        = options_for_select @schedules.map{|schedule| [l(schedule.created_at), schedule.id]}
    %p
      %label{:for => 'format'}= t('schedules.format') + ': '
      %select{:id => 'format', :name => 'f'}
        %option{:value => 'ics'} iCalendar
        %option{:value => 'xml'} XML
    = submit_tag t('schedules.generate'), :name => nil

  -# Generate navigation index
  .navigation
    %table
      %tbody
        - @study_units.group_by(&:program).each do |program, study_units|
          %tr
            %td.program= program
            %td.units
              - study_units.each do |study_unit|
                %a{:href => "##{URI.escape(study_unit.name.gsub(/ /, '+'))}"}= study_unit.position

  - content_for(:filter) do # Inserted through JavaScript
    .filters
      %label{:for => 'course_filter'}= t('schedules.filter') + ':'
      %input{:type => 'text', :id => 'course_filter'}

  -# Generate sections
  .study_units
    - @study_units.each do |study_unit|
      = render :partial => 'study_unit', :locals => {:study_unit => study_unit}

:javascript
  $('#schedules .navigation').append("#{escape_javascript yield(:filter)}");

  // Selection toggle
  var groups = $('#schedules .study_unit .groups');

  groups.find('li').click(function() {
    var list_item = $(this);
    var check_box = list_item.find('input');

    if (list_item.hasClass('selected') && check_box.attr('checked') == 'checked') {
      list_item.removeClass('selected');
      check_box.removeAttr('checked');
    } else {
      list_item.addClass('selected');
      check_box.attr('checked', 'checked');
    }
  });

  groups.find('input').click(function() {
    var check_box = $(this);
    var list_item = check_box.parent;

    if (list_item.hasClass('selected') && check_box.attr('checked') == 'checked') {
      list_item.removeClass('selected');
    } else {
      list_item.addClass('selected');
    }
  });

  $('#schedules .filters').show();

  $('#schedules #course_filter').keyup(function() {
    var pattern = '.*' + $('#course_filter').val() + '.*';

    $('#schedules .courses > li').each(function() {
      if ($(this).find('h4').text().match(pattern)) {
        $(this).show();
      } else {
        $(this).hide();
      }
    });
  });