-# encoding: UTF-8
-#
-# Copyright Alexander E. Fischer <aef@raxys.net>, 2011
-#
-# This file is part of Lilith.
-#
-# Lilith is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# Lilith is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with Lilith.  If not, see <http://www.gnu.org/licenses/>.
- set_body_id (:articles)
%h2= t('article.heading')

.actions
  = button_to t('article.create'), new_article_path, method: :get

%table.unpublished.default_table
  %caption= t('article.unpublished')
  %thead
    %tr
      %th.name= t('article.name')
      %th.sticky= t('article.sticky')
      %th.dates= t('article.dates')
      %th.actions
  %tbody.sticky
    - @unpublished_sticky_articles.each do |article|
      = render partial: 'articles/article_for_table', locals: {article: article, alternation_class: cycle('odd', 'even', name: :unpublished)}
  %tbody.non_sticky
    - if @unpublished_sticky_articles.empty? and @unpublished_non_sticky_articles.empty?
      %tr
        %td{colspan: 4}= t('article.none_found')
    - else
      - @unpublished_non_sticky_articles.each do |article|
        = render partial: 'articles/article_for_table', locals: {article: article, alternation_class: cycle('odd', 'even', name: :unpublished)}

%table.published.default_table
  %caption= t('article.published')
  %thead
    %tr
      %th.name= t('article.name')
      %th.sticky= t('article.sticky')
      %th.dates= t('article.dates')
      %th.actions
  %tbody.sticky
    - @published_sticky_articles.each do |article|
      = render partial: 'articles/article_for_table', locals: {article: article, alternation_class: cycle('odd', 'even', name: :published)}
  %tbody.non_sticky
    - if @published_sticky_articles.empty? and @published_non_sticky_articles.empty?
      %tr
        %td{colspan: 4}= t('article.none_found')
    - else
      - @published_non_sticky_articles.each do |article|
        = render partial: 'articles/article_for_table', locals: {article: article, alternation_class: cycle('odd', 'even', name: :published)}

